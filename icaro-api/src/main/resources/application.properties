spring.application.name=icaro-api

# --- JWT (O que você já tinha) ---
# ✨ ALTERAÇÃO AQUI: Mudamos de Base64 para uma string simples
jwt.secret-key=ChaveSecretaSuperSeguraParaOProjetoIcaro2025NinguemPodeDescobrir

# Expiração (continua igual)
jwt.expiration-ms=86400000


# --- ✨ ALTERAÇÃO AQUI: Configuração do Banco de Dados (DataSource) ---
# (⚠️ Altere o nome do banco, usuário e senha para os seus)
spring.datasource.url=jdbc:postgresql://localhost:5432/icaro_db
spring.datasource.username=postgres
spring.datasource.password=!info159456@ti

# --- Configurações do Hibernate (JPA) ---
# Isso diz ao Hibernate para usar o dialeto correto do PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# (Opcional, mas MUITO útil para desenvolvimento)
# 'update': Tenta atualizar as tabelas se você mudar as @Entity (ex: Usuario.java)
# 'validate': Apenas valida se as tabelas existem.
# 'create': Apaga TUDO e recria (bom para testes iniciais, perigoso depois)
# 'none': Não faz nada.
spring.jpa.hibernate.ddl-auto=update

# (Opcional) Mostra o SQL gerado no console (ótimo para debug)
spring.jpa.show-sql=true

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.filter.AuthorizationFilter=DEBUG